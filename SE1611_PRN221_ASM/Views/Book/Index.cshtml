@using Repository.Entities
@model IEnumerable<Repository.Entities.Book>

@{
    ViewData["Title"] = "View";
    var pagination = ViewBag.Pagination as PaginationViewModel;
    var genres = ViewBag.Genres as List<Genre>;
    var searchModel = ViewBag.SearchModel as SearchModel;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<partial name="_Notification" />
<div class="holder">
    <div class="container">
        <div class="filter-row">
            <div class="row">
                <div class="items-count">@ViewBag.TotalItems item(s)</div>
                <div class="select-wrap d-none d-md-flex">
                    <div class="select-label">SORT:</div>
                    <div class="select-wrapper select-wrapper-xxs">
                        <select class="form-control input-sm" name="sort" form="filter" id="sortOptions">
                            @foreach (var item in searchModel.sortOptions)
                            {
                                <option value="@item.ToString()">@item.ToString()</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4 aside aside--left filter-col filter-mobile-col filter-col--sticky js-filter-col filter-col--opened-desktop" data-grid-tab-content>
                <div class="filter-col-content filter-mobile-content">
                    <form asp-action="Index" id="filter" method="GET">
                        @if (!String.IsNullOrEmpty(searchModel.query))
                        {
                            <input type="hidden" id="query" name="query" value="@searchModel.query">
                        }

                        <div class="sidebar-block filter-group-block open">
                            <div class="sidebar-block_title sidebar-block_genres">
                                <span>Genres</span>
                                <span class="toggle-arrow"><span></span><span></span></span>
                            </div>
                            <div class="sidebar-block_content">
                                <ul class="category-list clearfix">
                                    @foreach (var item in genres!)
                                    {
                                        <li>

                                            <input id="@item.GenreId" name="genres" value="@item.GenreName" type="checkbox" @(searchModel.genres != null && (searchModel.genres).Contains(item.GenreName) ? "checked" : "")>

                                            @*else
                                        {
                                        <input id="@item.GenreId" name="genres" value="@item.GenreName" type="checkbox">
                                        }*@
                                            <label for="@item.GenreId">@item.GenreName</label>
                                        </li>
                                        @*<li><a href="#" title="@item.GenreName" class="open">@item.GenreName</a></li>*@
                                    }
                                </ul>
                            </div>
                        </div>
                        <div class="sidebar-block filter-group-block open">
                            <div class="sidebar-block_title sidebar-block_price">
                                <span>Price</span>
                                <span class="toggle-arrow"><span></span><span></span></span>
                            </div>
                            <div class="sidebar-block_content">
                                <div class="price-filter">
                                    <div>
                                        <label for="minPrice">Minimum Price:</label>
                                        <input type="text" id="minPrice" name="minPrice" style="padding: 8px; border-radius: 5px; border: 1px solid #ccc; font-size: 16px;" value="@searchModel.minPrice" onkeyup="addThousandSeparator(this.value)" />
                                    </div>
                                    <div>
                                        <label for="maxPrice">Maximum Price:</label>
                                        <input type="text" id="maxPrice" name="maxPrice" style="padding: 8px; border-radius: 5px; border: 1px solid #ccc; font-size: 16px;" value="@searchModel.maxPrice" onkeyup="addThousandSeparator(this)" />
                                    </div>
                                </div>

                            </div>
                            <input class="btn" type="submit" value="Filter" />
                    </form>
                </div>
            </div>
            <div class="filter-toggle js-filter-toggle">
                <div class="loader-horizontal js-loader-horizontal">
                    <div class="progress">
                        <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: 100%"></div>
                    </div>
                </div>
                <span class="filter-toggle-icons js-filter-btn"><i class="icon-filter"></i><i class="icon-filter-close"></i></span>
                <span class="filter-toggle-text"><a href="#" class="filter-btn-open js-filter-btn">REFINE & SORT</a><a href="#" class="filter-btn-close js-filter-btn">RESET</a><a href="#" class="filter-btn-apply js-filter-btn">APPLY & CLOSE</a></span>
            </div>
            <div class="col-lg aside">
                <div class="prd-grid-wrap">
                    @if (Model.Count() == 0)
                    {
                        <div class="page404-bg" style="min-height: 283.219px;">
                            <div class="page404-text">
                                <div class="txt3"><i class="icon-shopping-bag"></i></div>
                                <div class="txt4">Unfortunately, there are no book<br>matching the selection</div>
                            </div>
                            <svg class="blob" id="morphing" xmlns="http://www.w3.org/2000/svg" width="600" height="600" viewBox="0 0 600 600">
                                <g transform="translate(50,50)">
                                    <path class="p" d="M97.2238314525771 1.439333653381039C128.84467713309115 0.4259637126129163 159.14406268392844 9.370148150320311 179.166934093473 34.01182190866308C199.36900460291918 58.87530950973529 202.90548960737547 90.68024498687058 194.81223746521715 121.60580304443369C187.40457876470177 150.57207018997286 165.8761563452297 172.94739262801463 138.99491373883257 186.06338759100362C111.81726103897292 199.4818388330636 80.2994567003077 204.39565955476633 52.914845438661345 191.31303975260246C25.10065736566121 178.06103986025462 8.27879834084504 151.19053622010938 2.086979015413744 121.04683744229344C-3.965609143223749 92.16901702842802 3.330011518154576 62.2452323945172 21.725342274939493 39.117848617992216C40.14672173293643 15.957159976525514 67.75300063358034 2.094009735018931 97.2238314525771 1.439333653381039Z"></path>
                                </g>
                            </svg>
                        </div>
                    }
                    <div class="prd-grid product-listing data-to-show-3 data-to-show-md-3 data-to-show-sm-2 js-category-grid" data-grid-tab-content>
                        @foreach (var item in Model)
                        {
                            <div class="prd prd--style2 prd-labels--max prd-labels-shadow ">
                                <div class="prd-inside">
                                    <div class="prd-img-area">
                                        <a asp-action="Details" asp-route-id="@item.BookId" class="prd-img image-hover-scale image-container">
                                            <img src="@Html.DisplayFor(modelItem => item.ImageLink)" data-src="@Html.DisplayFor(modelItem => item.ImageLink)" alt="@Html.DisplayFor(modelItem => item.Title)" class="js-prd-img lazyload fade-up">
                                            <div class="foxic-loader"></div>
                                            <div class="prd-big-squared-labels">
                                            </div>
                                        </a>
                                    </div>
                                    <div class="prd-info">
                                        <div class="prd-info-wrap">
                                            <div class="prd-info-top">
                                                <div class="prd-rating">
                                                    @for (int i = 0; i < 5; i++)
                                                    {
                                                        if (i < Math.Floor(item.AverageRating))
                                                        {
                                                            <i class="icon-star-fill fill"></i>
                                                        }
                                                        else
                                                        {
                                                            <i class="icon-star-fill"></i>
                                                        }
                                                    }

                                                </div>
                                            </div>
                                            <div class="prd-rating justify-content-center">
                                                @for (int i = 0; i < 5; i++)
                                                {
                                                    if (i < Math.Floor(item.AverageRating))
                                                    {
                                                        <i class="icon-star-fill fill"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="icon-star-fill"></i>
                                                    }
                                                }
                                            </div>
                                            <div class="prd-tag"><a href="#">@Html.DisplayFor(modelItem => item.Author)</a></div>
                                            <h2 class="prd-title"><a a asp-action="Details" asp-route-id="@item.BookId">@Html.DisplayFor(modelItem => item.Title)</a></h2>
                                            <div class="prd-description">
                                                @Html.DisplayFor(modelItem => item.Description)
                                            </div>
                                            <div class="prd-action">
                                                <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                                    <input type="hidden" name="bookId" value="@item.BookId" />
                                                    <input type="hidden" name="quantity" value="1" />
                                                    <button type="submit" class="btn js-prd-addtocart">Add To Cart</button>
                                                </form>
                                            </div>
                                        </div>
                                        <div class="prd-hovers">
                                            <div class="prd-price">
                                                <div class="price-new">$@Html.DisplayFor(modelItem => item.Price) </div>
                                            </div>
                                            <div class="prd-action">
                                                <div class="prd-action-left">
                                                    <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                                        <input type="hidden" name="bookId" value="@item.BookId" />
                                                        <input type="hidden" name="quantity" value="1" />
                                                        <button type="submit" class="btn js-prd-addtocart">Add To Cart</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    @if (pagination != null && pagination.TotalPages > 1)
                    {
                        <ul class="pagination" style="display: flex; justify-content: center; align-items: center;list-style: none;padding: 0;margin: 20px 0;">
                            @if (pagination.StartPage > 1)
                            {
                                <li class="@(1 == pagination.CurrentPage ? "active" : "")">
                                    <a href="?page=1&query=@searchModel.query&sort=@searchModel.sortOptions[0]&minprice=@searchModel.minPrice&maxprice=@searchModel.maxPrice@foreach(var g in @searchModel.genres){
                            @($"&genres={g}")
                            }">First</a>
                                </li>
                            }
                            @for (int i = pagination.StartPage; i <= pagination.EndPage; i++)
                            {
                                <li class=" @(i == pagination.CurrentPage ? "active" : "")">

                                    <a href="?page=@i&query=@searchModel.query&sort=@searchModel.sortOptions[0]&minprice=@searchModel.minPrice&maxprice=@searchModel.maxPrice@foreach(var g in @searchModel.genres){
                            @($"&genres={g}")

                            }">@i</a>
                                </li>
                            }
                            @if (pagination.EndPage < pagination.TotalPages)
                            {
                                <li class="@(pagination.TotalPages == pagination.CurrentPage ? "active" : "")">

                                    <a class="page-link" href="?page=@pagination.TotalPages&query=@searchModel.query&sort=@searchModel.sortOptions[0]&minprice=@searchModel.minPrice&maxprice=@searchModel.maxPrice@foreach(var g in @searchModel.genres){
                            @($"&genres={g}")

                            }">@(pagination.TotalPages)</a>
                                </li>
                            }
                        </ul>
                    }
                    <!--<div class="mt-2">-->
                    <!--<button class="btn" onclick="THEME.loaderHorizontalSm.open()">Show Small Loader</button>-->
                    <!--<button class="btn" onclick="THEME.loaderHorizontalSm.close()">Hide Small Loader</button>-->
                    <!--</div>-->
                    <!--<div class="mt-2">-->
                    <!--<button class="btn" onclick="THEME.loaderCategory.open()">Show Opacity</button>-->
                    <!--<button class="btn" onclick="THEME.loaderCategory.close()">Hide Opacity</button>-->
                    <!--</div>-->
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        function addThousandSeparator(inputField) {
            // Get input value and remove any non-numeric characters
            let inputValue = inputField.value.replace(/\D/g, '');

            // Add thousand separator to the input value
            inputValue = Number(inputValue).toLocaleString('en-US');

            // Update the input field with the formatted value
            inputField.value = inputValue;
        }
    </script>
    <script>
        const form = document.getElementById('filter');
        const select = document.getElementById('sortOptions');
        select.addEventListener('change', function() {
            form.submit();
        });

        /*
         Toogle Price Filter
         */
        $(document).ready(function() {
            $('.sidebar-block_price').unbind('click');
            $('.sidebar-block_price').click(function() {
                $(this).next('.sidebar-block_content').find('.price-filter').slideToggle();
                if ($(this).closest('.sidebar-block').hasClass('open')) {
                    $(this).closest('.sidebar-block').removeClass('open')
                } else {
                    $(this).closest('.sidebar-block').addClass('open')
                }
            });
        });
    </script>
}